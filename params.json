{"name":"The CITE architecture","tagline":"Guide to github repositories","body":"Christopher Blackwell and Neel Smith originally developed the CITE architecture to meet the \r\nneeds of the [Homer Multitext project][1].\r\n\r\n# Notes on some recent releases #\r\n\r\n**July, 2014**: version 0.5.0 of [citemgr](https://github.com/cite-architecture/citemgr) adds automated \r\nverification of the Digital Scholarly Editions model of relations among texts, text-bearing surfaces of an artifact, and documentary images.\r\n\r\n**April 13, 2014**: version 9.2.0 of [sparqlcts](https://github.com/cite-architecture/sparqlcts)\r\noffers greatly improved performance on some categories of complex queries spanning different depths of citation hierarchies.\r\n\r\n**April 11, 2014**:  two parallel releases:\r\n\r\n- **Version 1.6 of the [ctsvalidator](https://github.com/cite-architecture/ctsvalidator) servlet** released (testing version 5.0.rc.2 of the [Canonical Text Services protocol](https://github.com/cite-architecture/cts_spec)): corrects two typographic errors in expected reply values.\r\n- **Version 0.9.0 of [sparqlcts](https://github.com/cite-architecture/sparqlcts)**, an implementation\r\nof the CTS protocol using a SPARQL endpoint for data access:  version 0.9.0 passes 100% of the tests in version 1.6 of `ctsvalidator`.\r\n\r\n\r\nWith `ctsvalidator` and `sparqlcts` in sync with each other for version 5.0.rc.2 of the CTS protocol, we are now resuming review of a final release candidate for CTS 5.0.\r\n\r\n\r\n# Overview of repositories #\r\nPublic repositories for our CITE architecture on github include:\r\n\r\n## Specifications\r\n\r\n- [CTS URNs](https://github.com/cite-architecture/ctsurn_spec)\r\n- [Canonical Text Services protocol](https://github.com/cite-architecture/cts_spec)\r\n\r\n## Code libraries for working with CITE repositories\r\n\r\n- [hocuspocus](https://github.com/cite-architecture/hocuspocus) for working with a text repository\r\n- [prestochango](https://github.com/cite-architecture/prestochango) for working a repository of structured collections\r\n- [nysi](https://github.com/cite-architecture/nysi) for working with an image repository\r\n- [abracadabra](https://github.com/cite-architecture/abracadabra) for working with CITE graphs\r\n\r\n## Implementations of the CITE service suite\r\n\r\n- [sparqlcts](https://github.com/cite-architecture/sparqlcts):  the Canonical Text Services\r\n- [sparqlcc](https://github.com/cite-architecture/sparqlcc):  the CITE Collection Services\r\n- [sparqlimg](https://github.com/cite-architecture/sparqlimg): the CITE Image Services\r\n- [citegraph](https://github.com/cite-architecture/citegraph): a CITE graph service\r\n\r\n## Tools for managing and integrating CITE repositories\r\n\r\n- [citemgr](https://github.com/cite-architecture/citemgr): utilities for working with CITE repositories, including generating RDF representations of repositories\r\n- [citeservlet](https://github.com/cite-architecture/citeservlet):  a servlet providing all four of the CITE services\r\n\r\n## Other utilities\r\n\r\n- [cite](https://github.com/cite-architecture/cite), a JVM library for working with URNs and TextInventories\r\n- [ctsvalidator](https://github.com/cite-architecture/ctsvalidator), a harness for running a suite of tests against a CTS installation\r\n- [citedownmgr](https://github.com/cite-architecture/citedownmgr), a gradle build system for converting\r\ntexts in citedown notation (markdown extended with URN references) to generic markdown\r\n\r\n\r\n\r\n[1]: http://homermultitext.github.io/","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}